{"ast":null,"code":"var _jsxFileName = \"/Users/evgenijantropov/my_projects/mesto-react/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport { useEffect, useState } from \"react\";\nimport api from \"../utils/api\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [currentUser, setCurrentUser] = useState({\n    name: '',\n    about: '',\n    avatar: ''\n  });\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [isEditProfilePopupOpen, setEditProfilePopup] = useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopup] = useState(false);\n  const [isEditAvatarPopupOpen, setEditAvatarPopup] = useState(false);\n  const [isDeleteConfirmPopupOpen, setDeleteConfirmPopup] = useState(false);\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    api.getProfile().then(userData => {\n      setCurrentUser({ ...currentUser,\n        name: userData.name,\n        about: userData.about,\n        avatar: userData.avatar,\n        _id: userData._id\n      });\n    }, error => {\n      console.log(error);\n    });\n  }, []);\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopup(true);\n  }\n\n  function handleEditProfileClick() {\n    setEditProfilePopup(true);\n  }\n\n  function handleAddPlaceClick() {\n    setAddPlacePopup(true);\n  }\n\n  function handleDeleteConfirmClick() {\n    setDeleteConfirmPopup(true);\n  }\n\n  function closeAllPopups() {\n    setEditAvatarPopup(false);\n    setEditProfilePopup(false);\n    setAddPlacePopup(false);\n    setDeleteConfirmPopup(false);\n    setSelectedCard(null);\n  }\n\n  function handleCardClick(cardData) {\n    setSelectedCard(cardData);\n  }\n\n  function handleUpdateProfile(data) {\n    api.updateProfile(data).then(res => {\n      setCurrentUser({ ...currentUser,\n        name: res.name,\n        about: res.about\n      });\n      closeAllPopups();\n    });\n  }\n\n  function handleUpdateAvatar(newUrl) {\n    api.updateAvatar(newUrl.avatar).then(res => {\n      setCurrentUser({ ...currentUser,\n        avatar: res.avatar\n      });\n      closeAllPopups();\n    });\n  }\n\n  function handleCardLike(card) {\n    // проверяем лайк\n    const isLiked = card.likes.some(like => like._id === currentUser._id); // отправляем запрос в АПИ и получаем обновленные данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    });\n  }\n\n  function handleCardRemove(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(state => state.filter(c => c._id !== card._id));\n    });\n  }\n\n  useEffect(() => {\n    api.getCards().then(cardsData => {\n      setCards(cardsData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n      value: currentUser,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        onRemoveBtnClick: handleDeleteConfirmClick,\n        cards: cards,\n        onCardLike: handleCardLike,\n        onCardRemove: handleCardRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups,\n        onUpdateUserProfile: handleUpdateProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"delete-confirm\",\n        wrapperClass: \"popup__wrapper_type_confirm\",\n        title: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        submitButtonTitle: \"\\u0414\\u0430\",\n        isOpen: isDeleteConfirmPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        card: selectedCard,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 6\n  }, this);\n}\n\n_s(App, \"x7VSrLfGCjRnYm4v307JGYFBK0g=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","Main","Footer","PopupWithForm","ImagePopup","useEffect","useState","api","CurrentUserContext","EditProfilePopup","EditAvatarPopup","AddPlacePopup","App","currentUser","setCurrentUser","name","about","avatar","selectedCard","setSelectedCard","isEditProfilePopupOpen","setEditProfilePopup","isAddPlacePopupOpen","setAddPlacePopup","isEditAvatarPopupOpen","setEditAvatarPopup","isDeleteConfirmPopupOpen","setDeleteConfirmPopup","cards","setCards","getProfile","then","userData","_id","error","console","log","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleDeleteConfirmClick","closeAllPopups","handleCardClick","cardData","handleUpdateProfile","data","updateProfile","res","handleUpdateAvatar","newUrl","updateAvatar","handleCardLike","card","isLiked","likes","some","like","changeLikeCardStatus","newCard","state","map","c","handleCardRemove","deleteCard","filter","getCards","cardsData"],"sources":["/Users/evgenijantropov/my_projects/mesto-react/src/components/App.js"],"sourcesContent":["import Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\nimport {useEffect, useState} from \"react\";\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = useState({\n        name: '',\n        about: '',\n        avatar: '',\n    })\n\n    const [selectedCard, setSelectedCard] = useState(null);\n\n    const [isEditProfilePopupOpen, setEditProfilePopup] = useState(false);\n\n    const [isAddPlacePopupOpen, setAddPlacePopup] = useState(false);\n\n    const [isEditAvatarPopupOpen, setEditAvatarPopup] = useState(false);\n\n    const [isDeleteConfirmPopupOpen, setDeleteConfirmPopup] = useState(false);\n\n    const [cards, setCards] = useState([]);\n\n    useEffect(() => {\n        api.getProfile().then(\n            (userData) => {\n                setCurrentUser({\n                    ...currentUser,\n                    name: userData.name,\n                    about: userData.about,\n                    avatar: userData.avatar,\n                    _id: userData._id\n                })\n            },\n            (error) => {\n                console.log(error);\n            }\n        )\n    }, []);\n\n    function handleEditAvatarClick() {\n        setEditAvatarPopup(true);\n    }\n\n    function handleEditProfileClick() {\n        setEditProfilePopup(true);\n    }\n\n    function  handleAddPlaceClick() {\n        setAddPlacePopup(true);\n    }\n\n    function handleDeleteConfirmClick() {\n        setDeleteConfirmPopup(true);\n    }\n\n    function closeAllPopups() {\n        setEditAvatarPopup(false);\n        setEditProfilePopup(false);\n        setAddPlacePopup(false);\n        setDeleteConfirmPopup(false);\n        setSelectedCard(null);\n    }\n\n    function handleCardClick(cardData) {\n        setSelectedCard(cardData);\n    }\n\n    function handleUpdateProfile(data) {\n        api.updateProfile(data)\n            .then((res) => {\n\n                setCurrentUser({\n                    ...currentUser,\n                    name: res.name,\n                    about: res.about,\n                })\n\n                closeAllPopups();\n            })\n    }\n\n    function handleUpdateAvatar(newUrl) {\n        api.updateAvatar(newUrl.avatar)\n            .then((res) => {\n                setCurrentUser({\n                    ...currentUser,\n                    avatar: res.avatar,\n                })\n\n                closeAllPopups();\n            })\n    }\n\n    function handleCardLike(card) {\n        // проверяем лайк\n        const isLiked = card.likes.some(like => like._id === currentUser._id);\n        // отправляем запрос в АПИ и получаем обновленные данные карточки\n        api.changeLikeCardStatus(card._id, !isLiked)\n            .then((newCard) => {\n                setCards(\n                    (state) => state.map(\n                        c => c._id === card._id ? newCard : c\n                    )\n                )\n            });\n    }\n\n    function handleCardRemove(card) {\n        api.deleteCard(card._id)\n            .then(() => {\n                setCards(\n                    (state) => state.filter((\n                            c => c._id !== card._id\n                        )\n                    ))\n            })\n    }\n\n    useEffect(() => {\n        api.getCards().then(\n            (cardsData) => {\n                setCards(cardsData);\n            }\n        )}, []);\n\n    return (\n     <div className=\"App\">\n        <CurrentUserContext.Provider value={currentUser}>\n            <Header />\n            <Main\n                onEditAvatar={handleEditAvatarClick}\n                onEditProfile={handleEditProfileClick}\n                onAddPlace={handleAddPlaceClick}\n                onCardClick={handleCardClick}\n                onRemoveBtnClick={handleDeleteConfirmClick}\n                cards={cards}\n                onCardLike={handleCardLike}\n                onCardRemove={handleCardRemove}\n            />\n            <Footer />\n\n            <EditProfilePopup\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n                onUpdateUserProfile={handleUpdateProfile}\n            />\n\n            <AddPlacePopup\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n            />\n\n            <EditAvatarPopup\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n                onUpdateAvatar={handleUpdateAvatar}\n            />\n\n            <PopupWithForm\n                name=\"delete-confirm\"\n                wrapperClass=\"popup__wrapper_type_confirm\"\n                title=\"Вы уверены?\"\n                submitButtonTitle=\"Да\"\n                isOpen={isDeleteConfirmPopupOpen}\n                onClose={closeAllPopups}\n            ></PopupWithForm>\n\n            <ImagePopup\n                card={selectedCard}\n                onClose={closeAllPopups}\n            />\n        </CurrentUserContext.Provider>\n    </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}