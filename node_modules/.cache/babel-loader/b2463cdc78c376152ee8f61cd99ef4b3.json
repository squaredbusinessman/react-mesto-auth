{"ast":null,"code":"export const BASE_URL = \"https://auth.nomoreparties.co\";\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/auth/local/register`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  }).then(res => res.json());\n};\nexport const authorize = (identifier, password) => {\n  return fetch(`${BASE_URL}/auth/local/`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      identifier,\n      password\n    })\n  }).then(res => res.json()).then(data => {\n    if (data.user) {\n      localStorage.setItem('jwt', data.jwt);\n      return data;\n    }\n  });\n};\nexport const getContent = token => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  }).then(res => res.json()).then(data => data);\n};","map":{"version":3,"names":["BASE_URL","register","email","password","fetch","method","headers","body","JSON","stringify","then","res","json","authorize","identifier","data","user","localStorage","setItem","jwt","getContent","token"],"sources":["/Users/evgenijantropov/my_projects/react-mesto-auth/src/MestoAuth.js"],"sourcesContent":["export const BASE_URL = \"https://auth.nomoreparties.co\";\n\nexport const register = (email, password) => {\n    return fetch(`${BASE_URL}/auth/local/register`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ email, password })\n    })\n        .then(res => res.json())\n};\n\nexport const authorize = (identifier, password) => {\n    return fetch(`${BASE_URL}/auth/local/`, {\n        method: 'POST',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ identifier, password })\n    }).then(res => res.json()).then((data) => {\n        if (data.user) {\n            localStorage.setItem('jwt', data.jwt);\n            return data;\n        }\n    })\n};\n\nexport const getContent = (token) => {\n    return fetch(`${BASE_URL}/users/me`, {\n        method: 'GET',\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n        .then(res => res.json())\n        .then(data => data)\n};\n"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;EACzC,OAAOC,KAAK,CAAE,GAAEJ,QAAS,sBAAb,EAAoC;IAC5CK,MAAM,EAAE,MADoC;IAE5CC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB;IAFX,CAFmC;IAM5CC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEP,KAAF;MAASC;IAAT,CAAf;EANsC,CAApC,CAAL,CAQFO,IARE,CAQGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARV,CAAP;AASH,CAVM;AAYP,OAAO,MAAMC,SAAS,GAAG,CAACC,UAAD,EAAaX,QAAb,KAA0B;EAC/C,OAAOC,KAAK,CAAE,GAAEJ,QAAS,cAAb,EAA4B;IACpCK,MAAM,EAAE,MAD4B;IAEpCC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB;IAFX,CAF2B;IAMpCC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;MAAEK,UAAF;MAAcX;IAAd,CAAf;EAN8B,CAA5B,CAAL,CAOJO,IAPI,CAOCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPR,EAOoBF,IAPpB,CAO0BK,IAAD,IAAU;IACtC,IAAIA,IAAI,CAACC,IAAT,EAAe;MACXC,YAAY,CAACC,OAAb,CAAqB,KAArB,EAA4BH,IAAI,CAACI,GAAjC;MACA,OAAOJ,IAAP;IACH;EACJ,CAZM,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMK,UAAU,GAAIC,KAAD,IAAW;EACjC,OAAOjB,KAAK,CAAE,GAAEJ,QAAS,WAAb,EAAyB;IACjCK,MAAM,EAAE,KADyB;IAEjCC,OAAO,EAAE;MACL,UAAU,kBADL;MAEL,gBAAgB,kBAFX;MAGL,iBAAkB,UAASe,KAAM;IAH5B;EAFwB,CAAzB,CAAL,CAQFX,IARE,CAQGC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EARV,EASFF,IATE,CASGK,IAAI,IAAIA,IATX,CAAP;AAUH,CAXM"},"metadata":{},"sourceType":"module"}