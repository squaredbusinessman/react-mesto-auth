{"ast":null,"code":"import { apiConfig } from \"./utils\";\n\nclass Api {\n  constructor(config) {\n    this._handleResponse = response => {\n      if (response.ok) {\n        return response.json();\n      } else {\n        return Promise.reject(`Произошла ошибка при обработке данных ${response.status}`);\n      }\n    };\n\n    this.getCards = () => {\n      return fetch(this._cardsUrl, {\n        method: 'GET',\n        headers: this._headers\n      }).then(res => this._handleResponse(res));\n    };\n\n    this.addCard = data => {\n      return fetch(this._cardsUrl, {\n        method: 'POST',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      }).then(res => this._handleResponse(res));\n    };\n\n    this.deleteCard = id => {\n      return fetch(`${this._cardsUrl}/${id}`, {\n        method: 'DELETE',\n        headers: this._headers\n      }).then(res => this._handleResponse(res));\n    };\n\n    this.getProfile = () => {\n      return fetch(this._profileUrl, {\n        method: 'GET',\n        headers: this._headers\n      }).then(res => this._handleResponse(res));\n    };\n\n    this.updateProfile = data => {\n      return fetch(this._profileUrl, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify(data)\n      }).then(res => this._handleResponse(res));\n    };\n\n    this.updateAvatar = newAvatarUrl => {\n      return fetch(`${this._profileUrl}/avatar`, {\n        method: 'PATCH',\n        headers: this._headers,\n        body: JSON.stringify({\n          avatar: newAvatarUrl\n        })\n      }).then(res => this._handleResponse(res));\n    };\n\n    this.changeLikeCardStatus = (id, isLiked) => {\n      return fetch(`${this._cardsUrl}/${id}/likes`, {\n        method: `${isLiked ? 'PUT' : 'DELETE'}`,\n        headers: this._headers\n      }).then(res => this._handleResponse(res));\n    };\n\n    this.getAllData = () => {\n      return Promise.all([this.getProfile(this._profileUrl), this.getCards(this._cardsUrl)]);\n    };\n\n    this._profileUrl = config.userUrl;\n    this._cardsUrl = config.cardsUrl;\n    this._headers = config.headers;\n  }\n\n}\n\nconst api = new Api(apiConfig);\nexport default api;","map":{"version":3,"names":["apiConfig","Api","constructor","config","_handleResponse","response","ok","json","Promise","reject","status","getCards","fetch","_cardsUrl","method","headers","_headers","then","res","addCard","data","body","JSON","stringify","deleteCard","id","getProfile","_profileUrl","updateProfile","updateAvatar","newAvatarUrl","avatar","changeLikeCardStatus","isLiked","getAllData","all","userUrl","cardsUrl","api"],"sources":["/Users/evgenijantropov/my_projects/react-mesto-auth/src/utils/api.js"],"sourcesContent":["import {apiConfig} from \"./utils\";\n\nclass Api {\n    constructor(config) {\n        this._profileUrl = config.userUrl;\n        this._cardsUrl = config.cardsUrl;\n        this._headers = config.headers;\n    }\n\n    _handleResponse = (response) => {\n        if (response.ok) {\n            return response.json();\n        } else {\n            return Promise.reject(`Произошла ошибка при обработке данных ${response.status}`);\n        }\n    }\n\n    getCards = () => {\n        return fetch(this._cardsUrl, {\n            method: 'GET',\n            headers: this._headers\n        })\n            .then((res) => this._handleResponse(res));\n    }\n\n    addCard = (data) => {\n        return fetch(this._cardsUrl, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify(data)\n        })\n            .then((res) => this._handleResponse(res))\n    }\n\n    deleteCard = (id) => {\n        return fetch(`${this._cardsUrl}/${id}`, {\n            method: 'DELETE',\n            headers: this._headers,\n        })\n            .then((res) => this._handleResponse(res))\n    }\n\n    getProfile = () => {\n        return fetch(this._profileUrl, {\n            method: 'GET',\n            headers: this._headers\n        })\n            .then((res) => this._handleResponse(res))\n    }\n\n    updateProfile = (data) => {\n        return fetch(this._profileUrl, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify(data)\n        })\n            .then((res) => this._handleResponse(res))\n\n    }\n\n    updateAvatar = (newAvatarUrl) => {\n        return fetch(`${this._profileUrl}/avatar` , {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({ avatar: newAvatarUrl })\n        })\n            .then((res) => this._handleResponse(res))\n    }\n\n    changeLikeCardStatus = (id, isLiked) => {\n        return fetch(`${this._cardsUrl}/${id}/likes`, {\n            method: `${isLiked ? 'PUT' : 'DELETE'}`,\n            headers: this._headers\n        })\n            .then((res) => this._handleResponse(res));\n    }\n\n    getAllData = () => {\n        return Promise.all([this.getProfile(this._profileUrl), this.getCards(this._cardsUrl)]);\n    }\n}\n\nconst api = new Api(apiConfig);\n\nexport default api;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}